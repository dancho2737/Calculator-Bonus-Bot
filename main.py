import os
import math
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    Dispatcher,
)
from aiohttp import web

user_choice_data = {}
user_active_status = {}

reply_keyboard = [['–ö—Ä–∏–ø—Ç–æ/–ë–∞–π –±–æ–Ω—É—Å 20'], ['–î–µ–ø–æ–∑–∏—Ç –±–æ–Ω—É—Å 10']]
markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_active_status[user_id] = True
    await update.message.reply_text(
        "–ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í—ã–±–µ—Ä–∏ –±–æ–Ω—É—Å –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –∏ –≤–≤–µ–¥–∏ —Å—É–º–º—É:",
        reply_markup=markup
    )

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    is_active = user_active_status.get(user_id, True)

    if is_active:
        await update.message.reply_text("–ë–æ—Ç —Å–µ–π—á–∞—Å –∞–∫—Ç–∏–≤–µ–Ω.")
    else:
        await update.message.reply_text("–ë–æ—Ç —Å–µ–π—á–∞—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.strip().lower()

    if not user_active_status.get(user_id, True):
        return

    if text == "stop":
        user_active_status[user_id] = False
        await update.message.reply_text("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏ /start.")
        return

    if text in ['–∫—Ä–∏–ø—Ç–æ/–±–∞–π –±–æ–Ω—É—Å 20', '–¥–µ–ø–æ–∑–∏—Ç –±–æ–Ω—É—Å 10']:
        user_choice_data[user_id] = text
        await update.message.reply_text(f"–í—ã–±—Ä–∞–Ω: {text}. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å—É–º–º—É.")
        return

    if user_id in user_choice_data:
        choice = user_choice_data[user_id]
        try:
            sums = float(text.replace(',', '.'))
        except ValueError:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
            return

        if choice == '–¥–µ–ø–æ–∑–∏—Ç –±–æ–Ω—É—Å 10':
            sums2 = sums * 0.10
            sums3 = sums2 * 15
        elif choice == '–∫—Ä–∏–ø—Ç–æ/–±–∞–π –±–æ–Ω—É—Å 20':
            sums2 = sums * 0.20
            sums3 = sums2 * 20
        else:
            await update.message.reply_text("–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ –±–æ–Ω—É—Å–∞.")
            return

        slots = sums3 + sums
        roulette = sums3 * 3.33 + sums
        blackjack = sums3 * 5 + sums
        crash = sums3 * 10 + sums

        result = (
            f"–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π –æ—Ç—ã–≥—Ä—ã—à–∞ —Å –≤–∞—à–µ–π —Å—É–º–º–æ–π –±–æ–Ω—É—Å–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –æ–±—ä—ë–º—ã —Å—Ç–∞–≤–æ–∫ –≤ —Ä–∞–∑–Ω—ã—Ö –∏–≥—Ä–∞—Ö:\n\n"
            f"üîπ –°–ª–æ—Ç—ã (100%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {math.ceil(slots)} —Å–æ–º–æ–≤\n"
            f"üîπ Roulette (30%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {math.ceil(roulette)} —Å–æ–º–æ–≤\n"
            f"üîπ Blackjack (20%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {math.ceil(blackjack)} —Å–æ–º–æ–≤\n"
            f"üîπ –û—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ, crash –∏–≥—Ä—ã –∏ –ª–∞–π–≤-–∫–∞–∑–∏–Ω–æ –∏–≥—Ä—ã (10%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {math.ceil(crash)} —Å–æ–º–æ–≤"
        )

        await update.message.reply_text(result)
    else:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –±–æ–Ω—É—Å –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.", reply_markup=markup)


async def telegram_webhook(request):
    app = request.app['bot_app']
    dispatcher = app.dispatcher

    data = await request.json()
    update = Update.de_json(data, app.bot)
    await dispatcher.process_update(update)

    return web.Response(text="ok")

async def on_startup(app):
    token = os.environ.get('BOT_TOKEN')
    app['bot_app'] = ApplicationBuilder().token(token).build()

    bot_app = app['bot_app']
    bot_app.add_handler(CommandHandler('start', start))
    bot_app.add_handler(CommandHandler('status', status))
    bot_app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    await bot_app.initialize()
    await bot_app.start()

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
    url = os.environ.get('WEBHOOK_URL')  # –ù–∞–ø—Ä–∏–º–µ—Ä: https://yourdomain.com/telegram
    if url is None:
        print("WEBHOOK_URL –Ω–µ –∑–∞–¥–∞–Ω!")
        return

    await bot_app.bot.set_webhook(url)
    print(f"Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ {url}")

async def on_cleanup(app):
    bot_app = app['bot_app']
    await bot_app.stop()
    await bot_app.shutdown()

app = web.Application()
app.router.add_post('/telegram', telegram_webhook)

app.on_startup.append(on_startup)
app.on_cleanup.append(on_cleanup)

if __name__ == '__main__':
    port = int(os.environ.get('PORT', 8080))
    web.run_app(app, host='0.0.0.0', port=port)
