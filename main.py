from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes
import os
import math

# –•—Ä–∞–Ω–∏–ª–∏—â–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_choice_data = {}
user_active_status = {}
user_spam_status = {}     # True ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è, False ‚Äî —Ç–æ–ª—å–∫–æ –∫–∞–∂–¥—ã–µ 10 –ø–æ–¥—Å—á—ë—Ç–æ–≤
user_count_calc = {}      # –°—á—ë—Ç—á–∏–∫ –ø–æ–¥—Å—á—ë—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
reply_keyboard = [['–ö—Ä–∏–ø—Ç–æ/–ë–∞–π –±–æ–Ω—É—Å 20'], ['–î–µ–ø–æ–∑–∏—Ç –±–æ–Ω—É—Å 10'], ['–ö—ç—à–±—ç–∫']]
markup = ReplyKeyboardMarkup(reply_keyboard, resize_keyboard=True)

def format_number(n):
    n_ceil = math.ceil(n)
    s = f"{n_ceil:,}"
    return s.replace(",", " ")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_active_status[user_id] = True
    user_spam_status[user_id] = True
    user_count_calc[user_id] = 0
    await update.message.reply_text(
        "–ë–æ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í—ã–±–µ—Ä–∏ –±–æ–Ω—É—Å –∏–ª–∏ —Ä–∞—Å—á—ë—Ç –∫—ç—à–±—ç–∫–∞, –∑–∞—Ç–µ–º –≤–≤–µ–¥–∏ —Å—É–º–º—É:",
        reply_markup=markup
    )

async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    is_active = user_active_status.get(user_id, True)
    if is_active:
        await update.message.reply_text("–ë–æ—Ç —Å–µ–π—á–∞—Å –∞–∫—Ç–∏–≤–µ–Ω.")
    else:
        await update.message.reply_text("–ë–æ—Ç —Å–µ–π—á–∞—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã –≤–∫–ª—é—á–∏—Ç—å.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    text = update.message.text.strip().lower()

    if not user_active_status.get(user_id, True):
        return

    if text == "stop":
        user_active_status[user_id] = False
        await update.message.reply_text("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ß—Ç–æ–±—ã –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞, –Ω–∞–ø–∏—à–∏ /start.")
        return

    if text == "stopspam":
        user_spam_status[user_id] = False
        await update.message.reply_text("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –±–æ–ª—å—à–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –Ω–µ –±—É–¥—É—Ç, –∫—Ä–æ–º–µ –∫–∞–∂–¥—ã—Ö 10 –ø–æ–¥—Å—á—ë—Ç–æ–≤.")
        return

    if text in ['–∫—Ä–∏–ø—Ç–æ/–±–∞–π –±–æ–Ω—É—Å 20', '–¥–µ–ø–æ–∑–∏—Ç –±–æ–Ω—É—Å 10', '–∫—ç—à–±—ç–∫']:
        user_choice_data[user_id] = text
        await update.message.reply_text(f"–í—ã–±—Ä–∞–Ω: {text}. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å—É–º–º—É.")
        return

    if user_id in user_choice_data:
        choice = user_choice_data[user_id]
        try:
            sums = float(text.replace(',', '.'))
        except ValueError:
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ.")
            return

        if choice == '–¥–µ–ø–æ–∑–∏—Ç –±–æ–Ω—É—Å 10':
            sums2 = sums * 0.10
            sums3 = sums2 * 15
            slots = sums3 + sums
            roulette = sums3 * 3.33 + sums
            blackjack = sums3 * 5 + sums
            crash = sums3 * 10 + sums

            result = (
                f"–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π –æ—Ç—ã–≥—Ä—ã—à–∞ —Å –≤–∞—à–µ–π —Å—É–º–º–æ–π –±–æ–Ω—É—Å–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –æ–±—ä—ë–º—ã —Å—Ç–∞–≤–æ–∫ –≤ —Ä–∞–∑–Ω—ã—Ö –∏–≥—Ä–∞—Ö:\n\n"
                f"üîπ –°–ª–æ—Ç—ã (100%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {format_number(slots)} —Å–æ–º–æ–≤\n"
                f"üîπ Roulette (30%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {format_number(roulette)} —Å–æ–º–æ–≤\n"
                f"üîπ Blackjack (20%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {format_number(blackjack)} —Å–æ–º–æ–≤\n"
                f"üîπ –û—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ, crash –∏–≥—Ä—ã –∏ –ª–∞–π–≤-–∫–∞–∑–∏–Ω–æ –∏–≥—Ä—ã (10%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {format_number(crash)} —Å–æ–º–æ–≤"
            )
            await update.message.reply_text(result)

        elif choice == '–∫—Ä–∏–ø—Ç–æ/–±–∞–π –±–æ–Ω—É—Å 20':
            sums2 = sums * 0.20
            sums3 = sums2 * 20
            slots = sums3 + sums
            roulette = sums3 * 3.33 + sums
            blackjack = sums3 * 5 + sums
            crash = sums3 * 10 + sums

            result = (
                f"–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π –æ—Ç—ã–≥—Ä—ã—à–∞ —Å –≤–∞—à–µ–π —Å—É–º–º–æ–π –±–æ–Ω—É—Å–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Å–¥–µ–ª–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –æ–±—ä—ë–º—ã —Å—Ç–∞–≤–æ–∫ –≤ —Ä–∞–∑–Ω—ã—Ö –∏–≥—Ä–∞—Ö:\n\n"
                f"üîπ –°–ª–æ—Ç—ã (100%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {format_number(slots)} —Å–æ–º–æ–≤\n"
                f"üîπ Roulette (30%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {format_number(roulette)} —Å–æ–º–æ–≤\n"
                f"üîπ Blackjack (20%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {format_number(blackjack)} —Å–æ–º–æ–≤\n"
                f"üîπ –û—Å—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç–æ–ª—å–Ω—ã–µ, crash –∏–≥—Ä—ã –∏ –ª–∞–π–≤-–∫–∞–∑–∏–Ω–æ –∏–≥—Ä—ã (10%) ‚Äî –æ—Ç—ã–≥—Ä–∞—Ç—å {format_number(crash)} —Å–æ–º–æ–≤"
            )
            await update.message.reply_text(result)

        elif choice == '–∫—ç—à–±—ç–∫':
            if sums < 500:
                await update.message.reply_text("–î–ª—è –∫—ç—à–±—ç–∫–∞ –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 500 —Å–æ–º —á–∏—Å—Ç—ã—Ö –ø–æ—Ç–µ—Ä—å.")
                return

            if 500 <= sums < 5000:
                percent = 10
            elif 5000 <= sums < 30000:
                percent = 15
            else:
                percent = 20

            cashback = sums * percent / 100
            await update.message.reply_text(
                f"–î–ª—è –∫—ç—à–±—ç–∫–∞ –Ω—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 500 —Å–æ–º —á–∏—Å—Ç—ã—Ö –ø–æ—Ç–µ—Ä—å –∑–∞ 24 —á–∞—Å–∞. "
                f"–ß–∏—Å—Ç—ã–µ –ø–æ—Ç–µ—Ä–∏ —Å—á–∏—Ç–∞—é—Ç—Å—è —Ç–∞–∫:\n"
                f"–¥–µ–ø–æ–∑–∏—Ç—ã –±–µ–∑ –±–æ–Ω—É—Å–æ–≤ ‚àí –≤—ã–≤–æ–¥—ã = —á–∏—Å—Ç—ã–µ –ø–æ—Ç–µ—Ä–∏.\n\n"
                f"–ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –≤–Ω–µ—Å–ª–∏ –∏ –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {format_number(sums)} —Å–æ–º, –Ω–æ –¥–æ —ç—Ç–æ–≥–æ –≤—ã–≤–µ–ª–∏ 1 000 —Å–æ–º. "
                f"¬´–≠—Ç–æ—Ç –≤—ã–≤–æ–¥ –º–æ–≥ –±—ã—Ç—å —Å –ø—Ä–æ—à–ª–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –∏–ª–∏ –±–æ–Ω—É—Å–∞¬ª. –¢–æ–≥–¥–∞ —á–∏—Å—Ç—ã–µ –ø–æ—Ç–µ—Ä–∏ = "
                f"{format_number(sums)} ‚àí 1 000 = {format_number(sums - 1000)} —Å–æ–º.\n\n"
                f"–†–∞–∑–º–µ—Ä –∫—ç—à–±—ç–∫–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—É–º–º—ã –ø–æ—Ç–µ—Ä—å:\n"
                f"–û—Ç 500 –¥–æ 4 999 —Å–æ–º ‚Äî 10%,\n"
                f"–æ—Ç 5 000 –¥–æ 29 999 —Å–æ–º ‚Äî 15%,\n"
                f"–æ—Ç 30 000 –∏ –≤—ã—à–µ ‚Äî 20%.\n\n"
                f"–í –≤–∞—à–µ–º —Å–ª—É—á–∞–µ {format_number(sums)} —Å–æ–º √ó {percent}% = {format_number(cashback)} —Å–æ–º –∫—ç—à–±—ç–∫–∞.\n"
                f"–ï—Å–ª–∏ –Ω—É–∂–Ω–æ ‚Äî –ø–æ–º–æ–≥—É –ø–æ—Å—á–∏—Ç–∞—Ç—å –¥—Ä—É–≥–∏–µ —Å—É–º–º—ã!"
            )
            return

        # –°—á—ë—Ç—á–∏–∫ –ø–æ–¥—Å—á—ë—Ç–æ–≤
        user_count_calc[user_id] = user_count_calc.get(user_id, 0) + 1
        count = user_count_calc[user_id]

        if choice != '–∫—ç—à–±—ç–∫':  # –î–ª—è –∫–µ—à–±—ç–∫–∞ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
            if user_spam_status.get(user_id, True):
                await update.message.reply_text(
                    "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∏—Ç–æ–≥–æ–≤—ã–µ —Å—É–º–º—ã! –≠—Ç–æ –¥–ª—è –≤–∞—à–µ–π –∂–µ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏. "
                    "–ï—Å–ª–∏ –∂–µ —Ö–æ—Ç–∏—Ç–µ —á—Ç–æ–±—ã —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ–ª—å—à–µ –Ω–µ –ø–æ—è–≤–ª—è–ª–æ—Å—å, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ stopspam"
                )
            else:
                if count % 10 == 0:
                    await update.message.reply_text(
                        "–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –∏—Ç–æ–≥–æ–≤—ã–µ —Å—É–º–º—ã! –≠—Ç–æ –¥–ª—è –≤–∞—à–µ–π –∂–µ —Å—Ç—Ä–∞—Ö–æ–≤–∫–∏."
                    )

    else:
        await update.message.reply_text("–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –±–æ–Ω—É—Å –∏–ª–∏ –∫—ç—à–±—ç–∫ –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.", reply_markup=markup)

def main():
    TOKEN = os.environ.get("BOT_TOKEN")
    if not TOKEN:
        print("–û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler('start', start))
    app.add_handler(CommandHandler('status', status))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.run_polling()

if __name__ == "__main__":
    main()
